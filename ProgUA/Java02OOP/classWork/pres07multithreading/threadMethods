Метод
Описание
activeCount()
Методом возвращается количество активных потоков в группе
checkAccess()
Метод позволяет выполнить проверку на предмет того, может ли указанный поток быть изменен выполняемым потоком
currentThread()
Метод возвращает результатом ссылку на объект текущего потока (потока, в котором вызывается метод)
enumerate()
Метод предназначен для копирования в массив ссылок на все активные потоки в данной группе потоков (и ее подгруппах)
getId()
Методом в качестве результата возвращается идентификатор потока - целое число, идентифицирующее поток
getName()
Метод в качестве результата возвращает имя потока
getPriority()
Метод возвращает результатом приоритет потока (целое число в диапазоне значений от 1 до 10)
getState()
Метод возвращает объект, определяющий статус потока
getThreadGroup()
Результатом метода является объект, определяющий группу, к которой принадлежит поток
Метод
Описание
holdsLock()
Метод в качестве результата возвращается логическое значение, определяющее, удерживает ли метод монитор (специальный объект, используемый для блокировки некоторого ресурса с целью недопущения обращения к нему сразу нескольких методов)
interrupt()
Метод предназначен для выполнения прерывания потока
interrupted()
Метод используется для проверки того, был ли поток прерван. При этом меняется статус потока (в отношении прерывания)
isAlive()
Метод для определения того, активен ли поток
isDaemon()
Проверка потока на предмет того, является ли он демон-потоком (такие потоки обычно выполняются в фоновом режиме и автоматически завершаются при завершении главного потока)
isInterrupted()
Метод используется для проверки того, был ли поток прерван. При этом статус потока (в отношении прерывания) не меняется
join()
Вызов метода приводит к тому, что поток, в котором вызывается метод, ожидает завершения потока, из объекта которого вызывается метод
Метод
Описание
notify()
При вызове метода один из потоков, находящихся в режиме ожидания (для получения доступа к ресурсу), переводится в режим выполнения
notifyAll()
При вызове метода все потоки, находящиеся в режиме ожидания (для получения доступа к ресурсу), переводятся в режим выполнения
run()
Метод с кодом, выполняемым в рамках потока. Определяет точку входа в поток
setDaemon()
Метод позволяет определить поток как демон-поток (особый вид потоков, которые автоматически завершаются при завершении выполнения главного потока)
setName()
Метод позволяет задать название для потока
setPriority()
Метод предназначен для присваивания значения приоритету потока
Метод
Описание
sleep()
Метод позволяет приостановить выполнение потока. Аргументом методу передается целое число, определяющее время (в миллисекундах) приостановки в выполнении потока
start()
Метод вызывается при запуске потока на выполнение
wait()
Метод предназначен для перевода потока в режим ожидания (при получении доступа к ресурсу)
yield()
Методом посылается сигнал диспетчеру потоков, что текущий поток готов уступить использование процессора в пользу других потоков